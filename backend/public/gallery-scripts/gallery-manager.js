/**
 * GalleryManager - Clase principal para gestionar la galer√≠a de im√°genes
 * Refactorizado para mejor mantenibilidad
 */
class GalleryManager {
  constructor() {
    this.currentCategory = ""
    this.init()
  }

  /**
   * Inicializa la galer√≠a y configura los event listeners
   */
  init() {
    console.log("Inicializando galer√≠a...")
    
    // Configurar listeners para filtros
    document.getElementById("category-filter").addEventListener("change", () => this.handleCategoryChange())
    
    // Cargar galer√≠a inicial
    this.loadGallery()
  }

  /**
   * Carga la galer√≠a con los filtros actuales
   */
  async loadGallery() {
    try {
      const images = await this.fetchImages()
      this.renderGallery(images)
      
      // Actualizar el indicador de filtro
      const filterDisplay = document.getElementById("filter-display")
      if (this.currentCategory === "profile") {
        filterDisplay.textContent = "üë§ Perfil"
      } else if (this.currentCategory === "projects") {
        filterDisplay.textContent = "üíº Proyectos"
      } else {
        filterDisplay.textContent = "Todas las categor√≠as"
      }
    } catch (error) {
      console.error("Error al cargar la galer√≠a:", error)
      this.showMessage("‚ùå Error al cargar la galer√≠a", "error")
    }
  }

  /**
   * Maneja el cambio de categor√≠a
   */
  handleCategoryChange() {
    const category = document.getElementById("category-filter").value
    this.currentCategory = category
    this.loadGallery()
  }
}

// Exportar la clase para que pueda ser importada por otros m√≥dulos
export default GalleryManager;
